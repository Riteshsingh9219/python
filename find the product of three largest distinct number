import java.util.Collections;
import java.util.PriorityQueue;

public class LargestThreeProduct {
    public static int findMaxProduct(int[] nums) {
        PriorityQueue<Integer> maxHeap = new PriorityQueue<>(Collections.reverseOrder());

        for (int num : nums) {
            if (!maxHeap.contains(num)) {
                maxHeap.add(num);
            }
        }

        if (maxHeap.size() < 3) {
            return -1;
        }

        int largest = maxHeap.poll();
        int secondLargest = maxHeap.poll();
        int thirdLargest = maxHeap.poll();

        return largest * secondLargest * thirdLargest;
    }

    public static void main(String[] args) {
        int[] nums = {10, 20, 30, 5, 30, 20, 15};

        int product = findMaxProduct(nums);

        if (product != -1) {
            System.out.println("The product of the three largest distinct elements is: " + product);
        } else {
            System.out.println("Not enough distinct elements.");
        }
    }
}
